import{_ as l,j as e}from"./index-B3Rvoy9Y.js";import{S as o}from"./stats-C5DAz4P7.js";function y(s,a,r){return{player:s,value:s.stats[r]}}function S({players:s,limit:a}){const r=l(s,"stats.gameCount",a,"desc").map(t=>y(t,"Games Played","gameCount")),u=l(s,"stats.kills",a,"desc").map(t=>({player:t,value:t.stats.kills})),i=s.sort((t,c)=>t.stats.kills/t.stats.deaths<c.stats.kills/c.stats.deaths?1:-1).slice(0,a).map(t=>({player:t,value:(t.stats.kills/t.stats.deaths).toFixed(2)})),d=s.sort((t,c)=>t.stats.fiveK<c.stats.fiveK?1:-1).slice(0,a).map(t=>({player:t,value:t.stats.fiveK})),h=s.sort((t,c)=>t.stats.twoK<c.stats.twoK?1:-1).slice(0,a).map(t=>({player:t,value:t.stats.twoK})),x=s.sort((t,c)=>t.stats.threeK<c.stats.threeK?1:-1).slice(0,a).map(t=>({player:t,value:t.stats.threeK})),w=s.sort((t,c)=>t.stats.fourK<c.stats.fourK?1:-1).slice(0,a).map(t=>({player:t,value:t.stats.fourK})),v=l(s,"stats.adr",a,"desc").map(t=>({player:t,value:t.stats.adr.toFixed(2)})),j=l(s,"stats.awpR",a,"desc").map(t=>({player:t,value:t.stats.awpR.toFixed(2)})),g=l(s,"stats.utilDmg",a,"desc").map(t=>({player:t,value:t.stats.utilDmg.toFixed(2)})),K=l(s,"stats.ctRating",a,"desc").map(t=>({player:t,value:t.stats.ctRating.toFixed(2)})),m=l(s,"stats.TRating",a,"desc").map(t=>({player:t,value:t.stats.TRating.toFixed(2)})),R=l(s,"stats.kast",a,"desc").map(t=>({player:t,value:t.stats.kast.toFixed(2)})),n=l(s,"stats.util"),F=n.map(t=>({player:t,value:t.stats.util})).reverse().splice(0,a),f=n.map(t=>({player:t,value:t.stats.util})).splice(0,a),p=l(s,"stats.hs",a,"desc").map(t=>({player:t,value:t.stats.hs})),P=l(s,"stats.clutchR",a,"desc").map(t=>({player:t,value:t.stats.clutchR.toFixed(2)})),M=l(s,"stats.cl_2",a,"desc").map(t=>({player:t,value:t.stats.cl_2.toFixed(2)})),T=l(s,"stats.cl_3",a,"desc").map(t=>({player:t,value:t.stats.cl_3.toFixed(2)})),k=l(s,"stats.cl_4",a,"desc").map(t=>({player:t,value:t.stats.cl_4.toFixed(2)})),A=l(s,"stats.odr",a,"desc").map(t=>({player:t,value:t.stats.odr.toFixed(2)})),D=l(s,"stats.fAssists",a,"desc").map(t=>({player:t,value:t.stats.fAssists.toFixed(2)})),_=l(s,"stats.ef",a,"desc").map(t=>({player:t,value:t.stats.ef.toFixed(2)}));return e.jsxs(e.Fragment,{children:[e.jsx(o,{title:"Games Played",rows:r}),e.jsx(o,{title:"Most Kills",rows:u}),e.jsx(o,{title:"Highest K/D Ratio",rows:i}),e.jsx(o,{title:"Most Aces",rows:d}),e.jsx(o,{title:"Damager Per Round",rows:v}),e.jsx(o,{title:"Most 2K's",rows:h}),e.jsx(o,{title:"Most 3K's",rows:x}),e.jsx(o,{title:"Most 4K's",rows:w}),e.jsx(o,{title:"Flash Assists per Match",rows:D}),e.jsx(o,{title:"Awp Kills per Round",rows:j}),e.jsx(o,{title:"Utility Damage per Match",rows:g}),e.jsx(o,{title:"CT-Side Rating",rows:K}),e.jsx(o,{title:"T-Side Rating",rows:m}),e.jsx(o,{title:"Kill/Assist/Survive/Traded",rows:R}),e.jsx(o,{title:"Utility Thrown Per Match",rows:F}),e.jsx(o,{title:"Least Utility Thrown Per Match",rows:f}),e.jsx(o,{title:"Highest Headshot Percentage",rows:p}),e.jsx(o,{title:"Clutch Points Average per Match",rows:P}),e.jsx(o,{title:"One vs Two Clutch",rows:M}),e.jsx(o,{title:"One vs Three Clutch",rows:T}),e.jsx(o,{title:"One vs Four Clutch",rows:k}),e.jsx(o,{title:"Open Duels Per Round",rows:A}),e.jsx(o,{title:"Enemies Flashed per Match",rows:_})]})}export{S as GeneralLeaderBoards};
